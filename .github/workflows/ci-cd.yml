name: CI/CD Pipeline

on:
  push:
    branches:
      - main        # Trigger deployment to production on the main branch
      - develop     # Trigger deployment to staging on the develop branch
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Install dependencies
    - name: Install dependencies
      run: npm ci

    # Run linter
    - name: Run ESLint
      run: npm run lint

    # Run tests
    - name: Run tests
      run: npm test
  build-and-push-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        

    # Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: sajalmishra786/node-app:latest

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    if: github.ref == 'refs/heads/develop'

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up SSH key for staging server
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.STAGING_SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    # Add the server to known hosts
    - name: Add staging server to known hosts
      run: ssh-keyscan -H ${{ secrets.STAGING_SERVER_IP }} >> ~/.ssh/known_hosts

    # Deploy the application
    - name: Deploy to Staging Server
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        ssh ubuntu@${{ secrets.STAGING_SERVER_IP }} <<EOF
          cd /path/to/your/application
          git pull origin develop
          npm install
          npm run build
          pm2 restart all
        EOF

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    if: github.ref == 'refs/heads/main'

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up SSH key for production server
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.PRODUCTION_SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    # Add the server to known hosts
    - name: Add production server to known hosts
      run: ssh-keyscan -H ${{ secrets.PRODUCTION_SERVER_IP }} >> ~/.ssh/known_hosts

    # Deploy the application
    - name: Deploy to Production Server
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        ssh ubuntu@${{ secrets.PRODUCTION_SERVER_IP }} <<EOF
          docker pull sajalmishra786/node-app:latest
          docker stop node-app || true
          docker rm node-app || true
          docker run -d --name node-app -p 3000:3000 sajalmishra786/node-app:latest
        EOF
